networks:
   elias_network:
      name: elias_network
      driver: bridge

volumes:
   elias_volume_system_database:
      external: true
   elias_volume_system_gateway:
      external: true
   elias_volume_service_query:
      external: true
   elias_volume_service_societal:
      external: true
   # elias_volume_system_mq_data:
   #    external: true
   # elias_volume_system_mq_log:
   #    external: true

services:
   elias_system_database:
      image: mysql:8.4.0-oraclelinux8
      container_name: elias_system_database
      hostname: elias_system_database
      restart: always
      environment:
         - MYSQL_TCP_PORT=3306
         - MYSQL_ROOT_PASSWORD=1234qQ1!
      ports:
         - 43306:3306
      volumes:
         - elias_volume_system_database:/var/lib/mysql
      networks:
         - elias_network

   elias_system_cache:
      image: redis:latest
      container_name: elias_system_cache
      hostname: elias_system_cache
      restart: always
      ports:
         - 6379:6379
      networks:
         - elias_network
  
   elias_system_message_queue:
      image: rabbitmq:management
      container_name: elias_system_message_queue
      hostname: elias_system_message_queue
      restart: always
      environment:
         RABBITMQ_DEFAULT_USER: guest
         RABBITMQ_DEFAULT_PASS: guest
      # volumes:
      #    - elias_volume_system_mq_data:/var/lib/rabbitmq
      #    - elias_volume_system_mq_log:/val/log/rabbitmq
      ports:
         - 5672:5672
      networks:
         - elias_network



   # Define the installed services.
   elias_service_query:
      image: miroslavbonchevbonchev/elias_service_query:latest
      container_name: elias_service_query
      hostname: elias_service_query
      restart: always
      build:
         context: .
         dockerfile: Query_Service/Query_Service/Dockerfile
      volumes:
         - elias_volume_service_query:/home/app
      ports:
         - 8080
      depends_on:
         - elias_system_database
         - elias_system_cache
         - elias_system_message_queue
      networks:
         - elias_network
      environment:
         ASPNETCORE_HTTP_PORTS: 8080

   elias_service_societal:
      image: miroslavbonchevbonchev/elias_service_societal:latest
      container_name: elias_service_societal
      hostname: elias_service_societal
      restart: always
      build:
         context: .
         dockerfile: Societal_Service/Societal_Service/Dockerfile
      volumes:
         - elias_volume_service_societal:/home/app
      ports:
         - 8080
      depends_on:
         - elias_service_query
      networks:
         - elias_network
      environment:
         ASPNETCORE_HTTP_PORTS: 8080

   elias_system_gateway:
      image: miroslavbonchevbonchev/elias_system_gateway:latest
      container_name: elias_system_gateway
      hostname: elias_system_gateway
      restart: always
      build:
         context: .
         dockerfile: _system/ELIAS_Gateway/Dockerfile
      volumes:
         - elias_volume_system_gateway:/home/app
      ports:
         - 51201:80
         - 51202:443
      depends_on:
         - elias_service_query
         - elias_service_societal
         # - elias_web_service
      networks:
         - elias_network
      environment:
         ASPNETCORE_HTTP_PORTS: 80                             # Enable transport over HTTP. Comment out when not needed or allowed.
         ASPNETCORE_HTTPS_PORTS: 443                           # Enable transport over HTTPS. When HTTP is not enabled, HTTPS becomes mandatory.
         ELIAS_SERVICES: "query:8080, societal:8080"           # List all services in the format service:port. The query service is optional, as it is implied with default port 8080.
         ELIAS_DOMAIN: "${ELIAS_DOMAIN}"                       # Domain - provide the domain.tld for this ELIAS installation.
         SERVICE_2_ED: "${SERVICE_2_ED}"                       # SERVICE TO ELIAS DOMAIN - maps domain.tld to the appointed service, and requests certificate for it as well. So if service "web" is mapped, then domain.tld will point to the same "web" service. Use "-" for none.
         SERVICE_2_W3: "${SERVICE_2_W3}"                       # SERVICE TO www. ELIAS DOMAIN - maps 'www.domain.tld to the appointed service, and requests certificate for it as well. So if service "web" is mapped, then web.elias.domain.tld will point to the same "web" service. Use "-" for none.
         SERVICE_2_SD: "${SERVICE_2_SD}"                       # SERVICE TO sub DOMAIN. Can be "ON" or "OFF". When "ON", enables access to services omitting the ELIAS sub-domain name-space i.e. enables access to services via [service].domain.tld in addition to service.elias.domain.tld.
         TLSCERT_MAIL: "${TLSCERT_MAIL}"                       # Provide a valid email address to fetch a Let's Encrypt certificate. Use "-" when Let's Encrypt certificate should not be acquired. TLSCERT_MAIL is ignored when HTTPS is disabled.
